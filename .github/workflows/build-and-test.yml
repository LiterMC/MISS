name: Build and Test

on:
  workflow_dispatch:
  push:
  pull_request:
    types:
      - opened
      - synchronize

jobs:
  generate-artifact-name:
    runs-on: ubuntu-latest
    outputs:
      name: ${{ steps.name.outputs.name }}
    steps:
      - name: Generate Name
        id: name
        run: |
          if [[ "${{ github.event_name }}" == 'pull_request' ]]; then
            suffix="PR ${{ github.event.number }}"
          else
            ref="${{ github.ref }}"
            ref="${ref#refs/heads/}"
            suffix="${ref//\//-}"
          fi
          name="MISS $suffix"
          echo "name: $name"
          echo "name=$name" >> "$GITHUB_OUTPUT"

  test:
    name: Check & Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Java 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: microsoft
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Gradle Check
        run: ./gradlew check

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: generate-artifact-name
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Java 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: microsoft
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: LOG-METADATA-1
        run: |
          function output() {
            echo "output:$1=$2"
          }
          output PR_NUMBER "${{ github.event.number }}"
          output HEAD_SHA "${{ github.sha }}"
      - name: Gradle Build
        run: |
          ./gradlew build "-Dmod_artifact_suffix=-pr${{ github.event.number }}-$(git rev-parse --short ${{ github.sha }})"
          mkdir output
          cp fabric/build/libs/* output/
          cp neoforge/build/libs/* output/
      - name: Upload Build Artifacts
        id: artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ needs.generate-artifact-name.outputs.name }}
          path: output
          overwrite: true
          if-no-files-found: error
      - name: LOG-METADATA-2
        run: |
          function output() {
            echo "output:$1=$2"
          }
          output ARTIFACT_ID "${{ steps.artifact.outputs.artifact-id }}"
          output ARTIFACT_URL "${{ steps.artifact.outputs.artifact-url }}"
